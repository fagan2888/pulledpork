# Config file for pulledpork
# Be sure to read through the entire configuration file
# If you specify any of these items on the command line, it WILL overwrite the values that you place in here

#######
#######  The below section defines what your oinkcode is (required for VRT rules), defines a temp path (must be writable)
#######  and also defines what version of rules that you are getting (for your snort version and subscription etc...)
####### 

# the base url that you are downloading from, note the examples
# base_url=http://192.168.1.10  ** NOTE that you MUST specify the -d option if not pulling from VRT or ET sites!
# base_url=http://emergingthreats.net/rules
base_url=http://www.snort.org/pub-bin/oinkmaster.cgi

# What rule file do we want.. the following represents a full subscription for snort 2.8.x (note the _s on the end)
# This is unique depending on the above base_url value, ex for ET rules it might be rule_file=emerging.rules.tar.gz
# Please note that at this time the file MUST be a tarball!
rule_file=snortrules-snapshot-2.8.tar.gz
# if you have a subscription, uncomment the following and comment the previous
#rule_file=snortrules-snapshot-2.8_s.tar.gz
# or, for ET rules:
#rule_file=emerging.rules.tar.gz

# Specify the rule categories to ignore from the tarball, these defaults are
# a pretty good starting place. These must be comma separated and have no spaces.
# Note that these are based on the VRT ruleset
ignore=deleted,experimental,local


# Define your Oinkcode
oinkcode=replacethiswithyouroinkcode

# What is our temp path, be sure this path has a bit of space for rule extraction and manipulation, no trailing slash
temp_path=/tmp

#######
#######  The below section is for rule processing.  This section is required if you are not specifying
#######  the configuration using runtime switches.  Note that runtime switches do SUPERSEED any values that
#######  you have specified here!
#######

# What path you want the .rules file containing all of the processed rules? (this value has changed
# as of 0.4.0, previously we copied all of the rules, now we are creating a single large rules file
# but still keeping a separate file for your so_rules!
rule_path=/usr/local/etc/snort/rules/snort.rules

# If you are running any rules in your local.rules file, we need to know about them
# to properly build a sid-msg.map that will contain your local.rules metadata (msg)
# information.  You can specify other rules files that are local to your system here 
# by adding a comma and more paths... remember that the FULL path must be specified 
# EACH time.
# local_rules=/path/to/these.rules,/path/to/those.rules
local_rules=/usr/local/etc/snort/rules/local.rules

# Where should I put the sid-msg.map file?
sid_msg=/usr/local/etc/snort/sid-msg.map

# Where do you want me to put the sid changelog?  This is a changelog that pulledpork maintains of all new sids that are imported
sid_changelog=/var/log/sid_changes.log
# this value is optional

#######
#######  The below section is for so_rule processing only.  If you don't need to use them.. then comment this section out!
#######  Alternately, if you are not using pulledpork to process so_rules, you can specify -T at runtime to bypass this altogether
#######

# What path you want the .so files to actually go to *i.e. where is it defined in your snort.conf, needs a trailing slash
sorule_path=/usr/local/lib/snort_dynamicrules/

# Path to the snort binary, we need this to generate the stub files
snort_path=/usr/local/bin/snort

# We need to know where your snort.conf file lives so that we can generate the stub files
config_path=/usr/local/etc/snort/snort.conf

# This is the file that contains all of the shared object rules that pulledpork
# has processed, note that this has changed as of 0.4.0 just like the rules_path!
sostub_path=/usr/local/etc/snort/rules/so_rules.rules

# Define the distro that we are running, this is for the precompiled shared object libs!
# Valid Distro Types=CentOS-4.6,CentOS-5.0,Debian-Lenny,FC-5,FC-9,FreeBSD-7.0,RHEL-5.0,Ubuntu-6.01.1,Ubuntu-8.04
distro=FreeBSD-7.0

# Define the arch that you are running... only valid options here are i386 or x86-64.
# note that currently precompiled so rules for RHEL-5.0 and Ubuntu-8.0.4 are only available 
# as x86-64.
arch=i386

# What version of snort are you running, again, for so_rules!
# Valid options for this value 2.8.0.1,2.8.0.2,2.8.1,2.8.2,2.8.2.1,2.8.2.2,2.8.3,2.8.3.1,2.8.3.2,2.8.4,2.8.4.1,2.8.5
snort=2.8.5

####### This next section is optional, but probably pretty useful to you.  Effectively list the path to the pid files that you want 
####### us to send a HUP signal to after we run, i.e. snort, barnyard, barnyard2 etc..  This list should be separated by comas only
#######  HINT: Unless you have specified the pid file for snort, it is generally snort_int.pid where int is the sniffing interface
#######  The same is true for barnyard2 (it is based on snort afterall).

# pid_path=/var/run/snort.pid,/var/run/barnyard.pid,/var/run/barnyard2.pid and so on...
pid_path=/var/run/snort_eth0.pid

####### Remember, a number of these values are optional.. if you don't need to process so_rules, simply comment out the so_rule section
####### you can also specify -T at runtime to process only GID 1 rules.

version=0.4.0
